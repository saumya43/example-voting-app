pipeline{
    agent none

    stages{
        stage('build'){
           agent {
              docker {
                   image 'node:8.13.0-alpine'

              }
           }
          when{
             changeset "**/result/**"

      }

            steps{
             echo 'compiling result app'
             dir('result'){
                sh 'npm install'
             }
            }

        }
        stage('test'){
                agent {
                    docker {
                       image 'node:8.13.0-alpine'

                    }
                }
            when{
              changeset "**/result/**"

      }

            steps{
             echo 'running unit tests on result app'
             dir('result'){
             sh 'npm install'
             sh 'npm test'
             }
            }
        }
        stage('docker-package'){
           agent any
            when{
             changeset "**/result/**"

        }
            steps{
             echo 'packaging worker app with docker'
             script{
             docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
             def resultImage = docker.build("saumya043/result:v${env.BUILD_ID}", "./result")
             resultImage.push()
             }

            }
        }
    }
    }
    post{
        always{
            echo 'Pipeline for result is completed..'

        }
        failure{
        slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
        slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }

        }
